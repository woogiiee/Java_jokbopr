1.Collection framework 의 상속 관계를 그리시오.

2.List 의 특징은 무엇인가요?
(1) 요소의 저장 수너가 유지된다.
(2) 같은 요소의 중복 저장을 허용한다.

3.ArrayList 와 LinkedList 의 차이는?
#검색
데이터 검색 시에는 ArrayList는 LinkedList에 비해 굉장히 빠르다. ArrayList는 인덱스 기반의 자료구조.
LinkedList는 검색 시 모든 요소를 탐색해야 하기 때문에 시간 복잡도를 가진다.
#삽입, 삭제
LinkedList에서의 데이터의 삽입, 삭제 시에는 ArrayList와 비교해 굉장히 빠른데, LinkedList는 이전 노드와 다음 노드를
참조하는 상태만 변경하면 되기 때문이다.
EX) ArrayList는 아파트. 어느 한층을 빼려고 하면 모든 층을 다 부시고 새로 만들어야 하기 때문에 중간에 삭제나 수정을
하려면 굉장히 불편. 대신에 속도가 빠르다.
LinkedList는 열차를 생각. 어느 한 블록을 빼서 쉽게 수정하거나 삭제할 수 있다. 대신에 속도가 Array에 비해 느리다.

4.아래의 List 객체에서 순차적 접근방법 3가지로 출력하시오.
-list가 가지는 get
-enhenced for
-iterator 객체

   List<String> list = new LinkedList<>();   
   
   // 컬렉션 인스턴스에 문자열 인스턴스 저장
   list.add("Toy");
   list.add("Box");
   list.add("Robot");
=============
5.hasSet을 이용하여 로또 번호를 뽑아내시오.

6.아래를 인스턴스 수가 2가 나오도록 수정하시오.      
        HashSet<Num> set = new HashSet<>();
        
        set.add(new Num(7799));
        set.add(new Num(9955));
        set.add(new Num(7799));

        System.out.println("인스턴스 수: " + set.size());
7.HashSet의 원리를 설명하시오.
Object 클래스에 정의된 hashcode 메소드의 반환 값을 기반으로 부류 결정.
선택된 부류 내에서 equals 메소드를 호출하여 동등 비교.
따라서 동등 비교의 과정에서 hashcode 메소드의 반환 값을 근거로 탐색의 대상이 확 줄어든다.

8.object 의 hashcode 함수에 대하여 설명하시오.
object의 hashcode는 객체의 메모리 번지를 이용해서 해시코드를 만들어 리턴하기 때문에 객체 마다 다른 값을 가지고 있다
객체의 값을 동등성 비교시 hashcode를 오버라이딩할 필요성이 있는데, 컬렉션 프레임워크에서 hashset, hashmap,hashtable로
두 객체가 동등한지 비교할 수 있다.

9.아래 태그에 대하여 설명하시오.
- form 태그 및 action 속성및 method 속성
- checkbox 와 radio
form태그는 어떤 형식. 설문지같이 생긴거.
action속성은 ?
method속성은?
checkbox는 ?
radio?

