JSP

jsp파일은 .class파일(WAS가 .class파일을 만든다.     WAS에는 톰캣과 제우스가있다.)
-> jsp는 자바 언어를 쓰는것.

유저에게 보여질때는 .html파일 형식으로 변환뒤 브라우저에서 보여진다.


servelet 1. url에 /? 치고 들어오면 나타남.
	2. get을 쓰면 get방식이 쓰이게 되고 post를 쓰면 post방식이 쓰임
	3.
 
servelet이란 HTTP프로토콜을 캡슐화 시킨것.
========================================================
CSS

*만약 요소가 float된 자손요소를 갖고 이 자손요소의 하단마진 경계가 요소 박스 아래에 있으면 요소 박스의 높이는 자손요소의 
하단마진 경계를 포함하도록 늘어난다.*

=====================================================
1.jsp 가 WAS 에서 돌아가는 원리를 설명하시오.
1) 사용자의 브라우저는 .jsp형태로 요청을 한다.
2) 웹 서버는 사용자의 요청을 JSP컨테이너로 넘긴다.
3) 만일 JSP파일이 처음 요청된 경우라면 JSP파일을 파싱한다. 그렇지 않은 경우라면 6)의 단계로 간다.
4) JSP파일로부터 서블릿이라는 자바 파일이 생성된다.
5) 서블릿 파일이 컴파일 과정을 거쳐 클래스 파일로 된다.
6) 클래스 파일이 메모리가 적재 되어 실행된다.
7) 실행 결과가 웹서버에 넘겨져 웹 서버는 HTML형태로 사용자에게 응답을 전송한다.
8) HTML형태의 페이지를 브라우저에서 실행시켜 사용자가 웹 페이지를 확인할 수 있다.


2.아래에 대하여 설명하시오.
--doGet
doget은 servlet에서 get방식으로 전달 받았을 때 실행되는 메소드이다.
get방식은 길이 제한이 있기 때문에 주로 선택이나 짧은 길이의 정보들을 다룰 때 주로 사용된다.
가장 큰 특징은 URL에 변수를 포함시켜 요청한다는 점이다.
보안에 약하다.

--doPost
dopost는 servlet에서 post방식으로 전달 받았을 때 실행되는 메소드이다.
URL에 Mapping정보만 표시된다.
get방식과 달리 URL에 데이터가 노출되지 않는다.

--@WebServlet("/hworld")

--HttpServlet

3.float 와 overflow에 대하여 설명하시오.
float는 요소를 왼쪽 또는 오른쪽에 배치할 때 유용한 속성이다. float속성을 부여한 요소의 다음 요소는 float속성을
부여한 요소가 차지하는 위치만 제외하고 나머지 공가늘 채우게 된다. 사진을 왼쪽 또는 오른쪽에 배치하고 그 주위를
텍스트로 채울 때 사용하거나, 사이트 레이아웃을 만들때 사용한다.

overflow는 내용이 요소의 크기를 벗어났을때 어떻게 처리할지를 정하는 속성이다. 내용이 주어진 공간에 다 들어가지
않을 때, 보여주게 할 수도 있고, 안보이게 할 수도 있고, 스크롤바를 만들게 할 수도 있다.

4.아래의 속성을 설명하시오.
--block
div태그, p태그, h태그, li태그 등이 이에 해당된다.
기본적으로 가로 영역을 모두 채우며, block요소 다음에 등장하는 태그는 줄바꿈이 된 것처럼 보인다. 이는 word같은 
문서에서 문단을 표시할 때, 한 문단이 끝난 뒤에 나타나는 요소는 항상 다음 줄에 표시되던 것과 비슷한 맥락이다.
width, height 속성을 지정할 수 있으며, block요소 뒤에 등장하는 태그가 그 이전 block요소의 오른쪽에 배치될 수
있어도 항상 다음 줄에 렌더링 된다.

--inline
span태그, b태그, i태그, a태그 등이 이에 해당된다.
block과 달리 줄 바꿈이 되지 않고, width와 height를 지정할 수 없다. word같은 문서에서 볼드, 이탤릭, 색상, 밑줄 등
글자나 문장에 효과를 주기 위해 존재하는 단위라고 할 수 있다. 문서에서 특정 부분에 색상을 입힌다고 다음에 나오는
글이 줄바꿈 되지 않듯이 inline요소 뒤에 나오는 태그 또한 줄바꿈 되지 않고 바로 오른쪽에 표시된다.

--inline-block
block과 inline의 중간 형태라고 볼 수 있는데, 줄 바꿈이 되지 않지만 크기를 지정할 수 있다. 

--display:none
요소를 렌더링하지 않도록 설정한다. visivility속성을 hidden으로 설정한 것과 달리, 영역도 차지 하지 않는다.

-visivility:hidden
숨김(자신의 영역은 계속 차지)
5.13-1 구현 하시오.